
<!-- Include sidebar -->
<%- include('../partials/_sidebar.ejs')%>
<!-- /Include sidebar -->


	<!-- CONTENT -->
	<section id="content">
		
		
		<!-- include NAVBAR -->
		<%- include('../partials/_navbar.ejs')%>
		<!-- include NAVBAR -->


		<!-- MAIN -->
		<main>
			<!-- include HEAD TITLE -->
			<%- include('../partials/_headTitle.ejs')%>
			<!-- /include HEAD TITLE -->
				<!-- <a href="#" class="btn-download">
					<i class='bx bxs-cloud-download' ></i>
					<span class="text">Download PDF</span>
				</a> -->
			</div>

			<ul class="box-info">
				<li>
					<i class='bx bxs-calendar-check' ></i>
					<span class="text">
						<h3><%= totalOrders.length %></h3>
						<p>Total Orders</p>
					</span>
				</li>
				<li>
					<i class='bx bxs-group' ></i>
					<span class="text">
						<h3><%= Users.length %></h3>
						<p>Total Users</p>
					</span>
				</li>
				<li>
					<i class='bx bxs-dollar-circle' ></i>
					<span class="text">
						<h3>₹ <%= totalsales %></h3>
						<p>Total Sales</p>
					</span>
				</li>
			</ul>

			<!-- chart js -->
			<div class="container p-5">
				<canvas id="myChart"></canvas>
			</div>

			<div class="table-data">
				<div class="order">
					<div class="head">
						<h3>Recent Orders</h3>
					</div>
					<table>
						<thead>
							<tr>
								<th class="text-center">Order ID</th>
								<th class="text-center">User</th>
								<th class="text-center">Date Order</th>
								<th class="text-center">Total</th>
								<th class="text-center">Status</th>
							</tr>
						</thead>
						<tbody class="text-center">
							<% Orders.forEach(item => { %>
								<tr>
									<td>
										<%= item.orderId %>
									</td>
									<td><%= item.user %></td>
									<td>
										<%= item.orderDate.toISOString().substring(0, 10) %>
									</td> <!-- Use a function to format the date -->
									<td>₹ <%= item.finalAmount %></td>
									<td>
										<span class="status <%= (item.status === 'Pending') ? 'bg-warning' :
												(item.status === 'Cancelled') ? 'bg-danger' :
												(item.status === 'Placed') ? 'bg-secondary' :
												(item.status === 'Shipped') ? 'bg-primary bg-gradient' :
												(item.status === 'Out For Delivery') ? 'bg-primary' :
												(item.status === 'Delivered') ? 'bg-success' : '' %>">
											<%= item.status %>
										</span>
									</td>
								</tr>
							<% }) %>
						</tbody>
					</table>
				</div>
				<!-- <div class="todo">
					<div class="head">
						<h3>Todos</h3>
						<i class='bx bx-plus' ></i>
						<i class='bx bx-filter' ></i>
					</div>
					<ul class="todo-list">
						<li class="completed">
							<p>Todo List</p>
							<i class='bx bx-dots-vertical-rounded' ></i>
						</li>
						<li class="completed">
							<p>Todo List</p>
							<i class='bx bx-dots-vertical-rounded' ></i>
						</li>
						<li class="not-completed">
							<p>Todo List</p>
							<i class='bx bx-dots-vertical-rounded' ></i>
						</li>
						<li class="completed">
							<p>Todo List</p>
							<i class='bx bx-dots-vertical-rounded' ></i>
						</li>
						<li class="not-completed">
							<p>Todo List</p>
							<i class='bx bx-dots-vertical-rounded' ></i>
						</li>
					</ul>
				</div> -->
			</div>
		</main>
		<!-- MAIN -->
	</section>
	<!-- CONTENT -->
	
	
	<script src="/admin/js/script.js"></script>
	<!-- Axios library -->
	<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
	<!-- Chart js -->
	<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


	<script>
		// Fetch data from server and render chart
		axios.get('/admin/show-line-chart')
			.then(res => {
				const chartData = res.data; // Assuming the response contains necessary data for chart
				renderChart(chartData);
			})
			.catch(err => {
				// Error handling
				console.error('Error fetching chart data:', err);
			});
	
		// Function to render the chart
		function renderChart(chartData) {
			// Your chart rendering code here
			const ctx = document.getElementById('myChart');
			new Chart(ctx, {
				type: 'line',
				data: {
					labels: chartData.labels, 
					datasets: [{
						label: 'Total Amount',
						data: chartData.data,
						borderWidth: 1
					}]
				},
				options: {
					scales: {
						y: {
							beginAtZero: true
						}
					}
				}
			});
		}
	</script>
	
</body>
</html>